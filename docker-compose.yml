#version: "3.9"
#
#services:
#  db:
#    image: postgres:13.4-alpine
#    restart: always
#    ports:
#      - 5432:5432
#    environment:
#      POSTGRES_PASSWORD: 'postgres'
#    environment_file:
#      - .env
#    volumes:
#      - greenhouse_server_database:/var/lib/postgresql/data
#
#  web:
#    build: app
#
#    command: uvicorn main:app --reload --host 0.0.0.0 --port 8000
#    network_mode: host
#    links:
#      - db
#
#    ports:
#      - 8040:8000
#    expose:
#      - 8040
#    volumes:
#      - type: bind
#        source: ./app
#        target: /app
#
#volumes:
#  greenhouse_server_database:
#    driver: local

version: "3.9"

networks:
  local_db:
    driver: bridge
    name: global_access
    ipam:
      driver: default
  web_app:
    driver: bridge
    name: access_to_db
    ipam:
      driver: default


services:
  db:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_DB: ${PGDATABASE}
      POSTGRES_USER: ${PG_SUPERUSER_NAME}
      POSTGRES_PASSWORD: ${PG_SUPERUSER_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postrges-db-data-t1:/var/lib/postgresql/data
    networks:
      - local_db
    ports:
      - ${PGPORT}:5432
    expose:
      - ${PGPORT}


  web:
    build:
      context: ./app
      dockerfile: Dockerfile
      cache_from:
        - python
    image: daniinxorchenabo/gh_server

    networks:
      - local_db
      - web_app
    env_file:
      - .env
    environment:
      PGHOST: host.docker.internal
    depends_on:
      - db
# && piccolo migrations forwards gh

    command: >
      bash -c "cd ./code/gh_server/app/src/db
      && echo "--------------------------------------------------"
      && ls
      && echo "--------------------------------------------------"
      && sleep 5
      && piccolo --diagnose
      && piccolo migrations forwards gh
      && cd ../..
      && uvicorn main:app --reload --host 0.0.0.0 --port 8000"

    links:
      - db
      - db:${PG_SUPERUSER_NAME}
      - db:${PGHOST}

    ports:
      - "8040:8000"
    volumes:
      - type: bind
        source: .
        target: /code/gh_server

  pgadmin:
    image: dpage/pgadmin4:5.7
    depends_on:
      - db
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    networks:
      - local_db
      - web_app
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data-t1:/var/lib/pgadmin
    links:
      - "db:pgsql-server"
volumes:
  postrges-db-data-t1:
  pgadmin-data-t1:

